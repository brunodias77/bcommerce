{
  // Configuração de logging para toda a aplicação
  "Logging": {
    // Níveis de log por categoria/namespace
    "LogLevel": {
      // Nível padrão para todos os logs não especificados
      "Default": "Information",
      // Reduz verbosidade dos logs internos do ASP.NET Core
      "Microsoft.AspNetCore": "Warning",
      // Logs específicos do YARP para monitoramento do reverse proxy
      "Yarp": "Information"
    }
  },
  // Hosts permitidos para requisições HTTP (asterisco = todos)
  "AllowedHosts": "*",
  
  // Configuração principal do YARP (Yet Another Reverse Proxy)
  "ReverseProxy": {
    // Definição de todas as rotas do API Gateway
    "Routes": {
      // Rota para o serviço de identidade/autenticação
      "identity-route": {
        // Cluster de destino para esta rota
        "ClusterId": "identity-cluster",
        // Critérios para matching da requisição
        "Match": {
          // Padrão de URL que será interceptado (catch-all captura tudo após identity/)
          "Path": "/api/identity/{**catch-all}"
        },
        // Transformações aplicadas à URL antes de encaminhar
        "Transforms": [
          {
            // Remove '/identity' do path, mantendo apenas '/api/...'
            "PathPattern": "/api/{**catch-all}"
          }
        ]
      },
      // Rota para o serviço de catálogo de produtos
      "catalog-route": {
        // Cluster de destino para catálogo
        "ClusterId": "catalog-cluster",
        "Match": {
          // Intercepta requisições para /api/catalog/*
          "Path": "/api/catalog/{**catch-all}"
        },
        "Transforms": [
          {
            // Transforma /api/catalog/products para /api/products no serviço
            "PathPattern": "/api/{**catch-all}"
          }
        ]
      },
      // Rota para o serviço de inventário/estoque
      "inventory-route": {
        "ClusterId": "inventory-cluster",
        "Match": {
          // Intercepta requisições para /api/inventory/*
          "Path": "/api/inventory/{**catch-all}"
        },
        "Transforms": [
          {
            // Remove '/inventory' do path
            "PathPattern": "/api/{**catch-all}"
          }
        ]
      },
      // Rota para o serviço de pedidos
      "order-route": {
        "ClusterId": "order-cluster",
        "Match": {
          // Intercepta requisições para /api/orders/*
          "Path": "/api/orders/{**catch-all}"
        },
        "Transforms": [
          {
            // Transforma /api/orders para /api/ no serviço
            "PathPattern": "/api/{**catch-all}"
          }
        ]
      },
      // Rota para o serviço de pagamentos
      "payment-route": {
        "ClusterId": "payment-cluster",
        "Match": {
          // Intercepta requisições para /api/payments/*
          "Path": "/api/payments/{**catch-all}"
        },
        "Transforms": [
          {
            // Remove '/payments' do path
            "PathPattern": "/api/{**catch-all}"
          }
        ]
      },
      // Rota para o serviço de notificações
      "notification-route": {
        "ClusterId": "notification-cluster",
        "Match": {
          // Intercepta requisições para /api/notifications/*
          "Path": "/api/notifications/{**catch-all}"
        },
        "Transforms": [
          {
            // Remove '/notifications' do path
            "PathPattern": "/api/{**catch-all}"
          }
        ]
      }
    },
    
    // Definição dos clusters (grupos de serviços de destino)
    "Clusters": {
      // Cluster para o serviço de identidade
      "identity-cluster": {
        // Algoritmo de balanceamento de carga (Round Robin = alternância circular)
        "LoadBalancingPolicy": "RoundRobin",
        // Instâncias do serviço disponíveis
        "Destinations": {
          // Instância única do serviço de identidade
          "identity-service": {
            // Endereço base do serviço (localhost porta 5001)
            "Address": "http://localhost:5001"
          }
        },
        // Configuração de health check (verificação de saúde)
        "HealthCheck": {
          // Health check ativo (YARP faz requisições periódicas)
          "Active": {
            // Habilita verificação automática
            "Enabled": true,
            // Intervalo entre verificações (30 segundos)
            "Interval": "00:00:30",
            // Timeout para cada verificação (5 segundos)
            "Timeout": "00:00:05",
            // Política: marca como unhealthy após falhas consecutivas
            "Policy": "ConsecutiveFailures",
            // Endpoint usado para verificação de saúde
            "Path": "/health"
          }
        }
      },
      // Cluster para o serviço de catálogo
      "catalog-cluster": {
        "LoadBalancingPolicy": "RoundRobin",
        "Destinations": {
          "catalog-service": {
            // Serviço de catálogo na porta 5002
            "Address": "http://localhost:5002"
          }
        },
        "HealthCheck": {
          "Active": {
            "Enabled": true,
            "Interval": "00:00:30",
            "Timeout": "00:00:05",
            "Policy": "ConsecutiveFailures",
            "Path": "/health"
          }
        }
      },
      // Cluster para o serviço de inventário
      "inventory-cluster": {
        "LoadBalancingPolicy": "RoundRobin",
        "Destinations": {
          "inventory-service": {
            // Serviço de inventário na porta 5003
            "Address": "http://localhost:5003"
          }
        },
        "HealthCheck": {
          "Active": {
            "Enabled": true,
            "Interval": "00:00:30",
            "Timeout": "00:00:05",
            "Policy": "ConsecutiveFailures",
            "Path": "/health"
          }
        }
      },
      // Cluster para o serviço de pedidos
      "order-cluster": {
        "LoadBalancingPolicy": "RoundRobin",
        "Destinations": {
          "order-service": {
            // Serviço de pedidos na porta 5004
            "Address": "http://localhost:5004"
          }
        },
        "HealthCheck": {
          "Active": {
            "Enabled": true,
            "Interval": "00:00:30",
            "Timeout": "00:00:05",
            "Policy": "ConsecutiveFailures",
            "Path": "/health"
          }
        }
      },
      // Cluster para o serviço de pagamentos
      "payment-cluster": {
        "LoadBalancingPolicy": "RoundRobin",
        "Destinations": {
          "payment-service": {
            // Serviço de pagamentos na porta 5005
            "Address": "http://localhost:5005"
          }
        },
        "HealthCheck": {
          "Active": {
            "Enabled": true,
            "Interval": "00:00:30",
            "Timeout": "00:00:05",
            "Policy": "ConsecutiveFailures",
            "Path": "/health"
          }
        }
      },
      // Cluster para o serviço de notificações
      "notification-cluster": {
        "LoadBalancingPolicy": "RoundRobin",
        "Destinations": {
          "notification-service": {
            // Serviço de notificações na porta 5006
            "Address": "http://localhost:5006"
          }
        },
        "HealthCheck": {
          "Active": {
            "Enabled": true,
            "Interval": "00:00:30",
            "Timeout": "00:00:05",
            "Policy": "ConsecutiveFailures",
            "Path": "/health"
          }
        }
      }
    }
  },
  
  // Configuração para autenticação JWT
  "Jwt": {
    // URL do servidor de autorização (Keycloak)
    "Authority": "http://localhost:8080/realms/bcommerce",
    // Audiência esperada nos tokens JWT
    "Audience": "bcommerce-api",
    // Desabilita verificação HTTPS em desenvolvimento
    "RequireHttpsMetadata": false
  }
}
